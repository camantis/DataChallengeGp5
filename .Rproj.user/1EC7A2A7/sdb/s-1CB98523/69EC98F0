{
    "contents" : "---\ntitle: \"The Visual Exploration of Data\"\nsubtitle: \"ECI 289: Data Analysis in the Built Environment\"\nauthor: \"H Ambrose\"\ndate: \"`r Sys.Date()`\"\noutput:\n  tufte::tufte_html: default\n  tufte::tufte_handout:\n    citation_package: natbib\n    latex_engine: xelatex\n  tufte::tufte_book:\n    citation_package: natbib\n    latex_engine: xelatex\nbibliography: skeleton.bib\nlink-citations: yes\n---\n\n```{r setup, include=FALSE}\nlibrary(tufte)\nlibrary(ggplot2)\nlibrary(sp)\nlibrary(rgdal)\nlibrary(maptools)\nlibrary(ggmap)\nlibrary(HistData)\nlibrary(dplyr)\nlibrary(cholera)\n# invalidate cache when the tufte version changes\nknitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tufte'))\noptions(htmltools.dir.version = FALSE)\n```\n\n## Introduction\n```{r title, fig.margin=TRUE, fig.show='show',  fig.width=3, fig.height=2.5, cache=TRUE, echo=FALSE, fig.cap = \"[A map of the 1854 Cholera Outbreak as recorded by John Snow.](http://blog.rtwilson.com/john-snows-cholera-data-in-more-formats/)\" }\nknitr::include_graphics(\"http://blog.rtwilson.com/wp-content/uploads/2012/01/OSColor_Points.png\")\n```\n> The purpose of this document to provide a brief overview of techniques for the visual exploration of data in R. It covers techniques for exploring different types of data with both the base R and an assortment of R packages.  The visual exploration and display of quantitative information is one of the most powerful tools in the researcher's toolbox.  Gaining skills in visualizations in R can yeild better inference, and empower communication.\n\n# Background\n\n`r newthought('The basic task of scientific research')` is to make smart comparisons.  Graphical explorations  are a critical way to expose important relationships, and graphics become excedingly powerful when data is complicated.  Visual design is important, but it cannot replace good content or credible research. R is a powerful resource for both making visual comparisons of data and sharing them.  \n\n```{marginfigure}\n_\"Good research takes an open mind, but one that stands firm at the gates of truth.\"_\n- Edward Tufte\n```\n\n# Principals of Design\n\nEdward Tufte is an author of several books on the visualizing quanitative information, and is a professor emeritus of Yale and Princton.  Tufte has several design principals which can be used to guide the creation of good graphics:\n\n* Good design cannot fix broken content\n* Minimize the design figuring out time\n* Maximize the content reasoning time\n* Keep it straightfoward and keep it conventional\n* Make information adjacent in space\n* Sort factor levels in meaningful ways\n* Use simple color palates\n* Don't make graphs of small data (includes pie charts)\n* No 3D or other gimmicks\n* Provide annotations, references, and links to add credibility to your visualization\n\n## Plot Types and R Syntax\n\nThe syntax of plotting in R and in ggplot2 is pretty easy to pick up. In general, we create different layers of elements we would like to plot by adding statements to the plot function.  In the case of a single variable, we can add graphic elements like titles and axis labels.  Below is the code for a simple boxplot of diamond price from the diamonds dataset.\n\n```Example1\n# one dimensional data\nboxplot (price, data = diamond)\ntitle(main = \"A simple box plot\")\n```\n\nFor categorical or multivariate datasets, we can indicate a relationship we want to plot, or categories we want to break out. Below, I create a plot of miles per gallon vs. vehicle horsepower in the mtcars dataset. In the second statement, I also add points (in blue) for mpg vs. engine displacement to the same graph. \n\n```Example2\n# multi dimensional data\nplot (mpg ~ hpp, data = mtcars, col = \"red\")\npoints (mpg ~ disp, data = mtcars, col = \"blue\")\ntitle(main = \"A simple Scatter Plot\")\n```\n\nWe'll cover a few basic plot types in this document:\n\n* histogram\n* boxplot\n* scatterplot\n* maps\n* level plot\n* heat map\n\nggplot2 has a slightly different syntax than the base plot function.  In ggplot, layers of data are treated as different geometries and plotted by calling a selection of \"geom\" commands.  Most types of basic plots, such as points, lines, bars, etc, can be called by using the geom_points or geom_lines command respectively. Below is the code for the boxplot of diamonds data shown in the margin below.\n\n```Example3\n# ggplot2 syntax\nggplot(diamond2, aes(cut, price)) + \ngeom_boxplot() + \nlabs(title=\"Diamond Price by Cut Quality from the\n```\n\n## Getting Started\n\n```{r diamond box, fig.margin = TRUE, fig.cap = \"An example of a box plot and a histogram of the diamonds data.\", fig.show=\"hold\",cache=TRUE,echo=FALSE}\ndata(diamonds)\ndiamond2 = sample_n(diamonds,5000)\nggplot(diamond2, aes(cut, price)) + geom_boxplot() + labs(title=\"Diamond Price by Cut Quality from the Diamonds Dataset\")\nhist(diamond2$price,xlab=\"Price\",main = \"Diamond Prices from the Diamonds Dataset\")\n```\n\nTwo of the most common plots for exploring data are box plots and histograms.  The histogram shows the frequencies of a single variable across its range, in this case the prices of diamonsThe box plot provides information similar to a histogram, but allows for adjacent comparisons.  The \"box\" in the box plot displays the first and third quartile, while the line indicates the median.  The \"wiskers\" or error bars represent the highest and lowest observation respectively, but to do not extend past 1.5 times the intequartile range.  Any outlying data points past the bars are plotted individually. Boxplots in ggplot are slightly different than the base package, read the help file for more information.\n\n```{r diamond scatter,echo=FALSE,cache=TRUE,fig.height=3}\nggplot(diamond2, aes(carat,price)) + geom_point(aes(colour = factor(cut))) + labs(title=\"Diamond Price by Carat\",ylab=\"Price $\",xlab=\"Carat\")\n```\n\nThis is a scatterplot from ggplot2.  The scatterplot can be used to compare trends and correlations for larger datasets.  Any two continuous series can be generally plotted in a scatter plot x ~ y.  Like in the boxplot, factor levels of diamond cut have also been called out. By using a range of colors and marker shapes, scatterplots can display more dimensions than boxplots.  Scatterplots can also become overpowering when their are two many colors or markers.  \n\nScatter plots can also be usful for displaying text. Below, we have vehicles in the mtcars dataset: vehicles are plotted with their fuel economy (miles per gallon) on the x axis, horsepower on the y, and each vehicle is labeled with the vehicle name.\n\n```{r fig-nocap-main, cache=TRUE,fig.height=3}\n# annother scatterplot, but with point labels\np <- ggplot(mtcars, aes(mpg, hp,label = rownames(mtcars))) + geom_point() + geom_text(check_overlap = TRUE) +\n  xlim(5,35)\np\n```\n\n# You know a lot John Snow\n\nImages and graphics play an integral role in understanding spatial data.  And no story illustrates this better than the tale of John Snow:  \n\n> _\"When Asiatic cholera visited London in 1853-54, death greeted many in the population. Vomiting and diar- rhea quickly ended life, and no one knew why or what caused such devastation. There were many theories. John Snow (1813-58) was a London medical practitio- ner of modest origin from a laboring family in York ... When deadly cholera appeared in his city in 1853-54, (Snow) used his formidable intellectual skills to inves- tigate and then identify the likely cause. He argued forcefully for the germ theory, feeling that cholera was caused by an infectious microbe rather than miasmata, or polluted gases.\"_^[_\"History, maps and the internet: UCLAâ€™s John Snow site\"_ - Ralph R. Frerichs]\n\nSnow collected data on deaths due to cholera in the Soho area for a few weeks beginning at the end of August. He recorded the dates of deaths, and their location in the city.  He also noted the location of other landmarks, including streets and public water pumps.  \n\n```{r, echo = FALSE,fig.width = 10,fig.fullwidth=TRUE,fig.height=3,fig.caption = \"An aggregation of John Snow's original data\"}\npar(mfrow=c(1,3))\nboxplot(time.series.snow$date, ylab= \"Dates of Outbreak\")\nabline(h = as.Date(\"1854-09-08\"), col = \"red\", lty = \"dotted\")\ntext(time.series.snow[time.series.snow$date == \"1854-09-08\",\"date\"], label = \"Sep 08\", cex = 0.75, col = \"red\", pos = 1)\ntitle(main = \"Snow: Length of Cholera Outbreak\")\nboxplot(time.series.snow$deaths,ylab = \"Fatalities per Day\")\ntitle(main = \"Snow: Daily Fatalities Recorded\")\nplot(time.series.snow$date, time.series.snow$deaths, type = \"o\", xlab = \"Date\",\n  ylab = \"fatalities\", xlim = range(time.series.vestry$date), ylim = range(time.series.vestry$fatalities))\nabline(v = as.Date(\"1854-09-08\"), col = \"red\", lty = \"dotted\")\ntext(time.series.snow[time.series.snow$date == \"1854-09-08\",\n  c(\"date\", \"deaths\")], label = \"Sep 08\", cex = 0.75, col = \"red\", pos = 4)\ntitle(main = \"Snow: Removal of the Broad Street Pump Handle\")\n```\n\nHere we see a boxplot in the base graphics pattern of the cholera deaths recorded by Snow.  This data comes from the Cholera package.  I've also indicated the date \"Sep 08\".  Snow identified a cluster of infection in the Soho area around the Broad street water pump.  On September 8th, the pump was removed, which was credited with helping to end the epidemic.  But, as Snow himself noted, the deaths had likely already peaked before the pump handle was removed (as evidenced by the graph on the far left.)\n\n```{r levelplot, echo = FALSE, fig.margin=TRUE,fig.cap=\"A levelplot of the Cholera deaths in the Snow's data set.\"}\ndeathss = Snow.deaths\ndeathss$case =10\ndeathss.lowess = loess(case ~ x + y, data = deathss,degree = 2,span = 0.25)\ndeathss.fit = expand.grid(list(x = seq(10,18,0.3),y=seq(10,18,0.3)))\nz = predict(deathss.lowess,newdata = deathss.fit)\ndeathss.fit$Height = as.numeric(z)\nimage(seq(10, 18, .3), seq(10, 18, .3), z,\n      main = \"A Level Plot of the Cholera Data\", xlab=\"Lattitude\",ylab = \"Longitude\")\nbox()\n```\nThese plots would not have provided Snow the insight he needed.  A level plot is a simple type of heatmap that interpolates a value for each point on a grid.  While a level plot might have revealed the true relationship observed by Snow, it can shows less detail than a proper map.  As evidenced by the example to the right, it can also be difficult to get good resolution from a level plot.\n\nWhat Snow did was to plot the spatial data on a map; he was immediately able to identify the trend.  The base plot utility in R is able to deal with spatial data.  First, you need to make a spatial data fram with the Lattitudes and Longitudes from the data.  After that, we pass the streets, deaths, and pump locations to the plot function.  We can also add density lines to show how the outbreak eminated from the Broad street pump.\n\n```{r,echo = FALSE,fig.cap = \"A simple map of John Snow's data using the base plot function. Data from the HistData package.\",message=FALSE}\ndata(Snow.deaths); data(Snow.pumps); data(Snow.streets); data(Snow.polygons)\nslist <- split(Snow.streets[,c(\"x\",\"y\")],as.factor(Snow.streets[,\"street\"]))\nLl1 <- lapply(slist,Line)\nLsl1 <- Lines(Ll1,\"Street\")\nSnow.streets.sp <- SpatialLines(list(Lsl1))\nSnow.deaths.sp = SpatialPoints(Snow.deaths[,c(\"x\",\"y\")])\nspp <- SpatialPoints(Snow.pumps[,c(\"x\",\"y\")])\nSnow.pumps.sp <- SpatialPointsDataFrame(spp,Snow.pumps[,c(\"x\",\"y\")])\nrequire(KernSmooth)\nkde2d <- bkde2D(Snow.deaths[,2:3], bandwidth=c(0.5,0.5))\nplot(Snow.streets.sp, col=\"gray\")\ntitle(main=\"Snow's Cholera Map of London\")\nplot(Snow.deaths.sp, add=TRUE, col ='red', pch=15, cex=0.6)\nplot(Snow.pumps.sp, add=TRUE, col='blue', pch=17, cex=1.5)\ntext(Snow.pumps[,c(\"x\",\"y\")], labels=Snow.pumps$label, pos=1, cex=0.8)\ncontour(x=kde2d$x1, y=kde2d$x2,z=kde2d$fhat, add=TRUE)\nlegend(5.5,7,c(\"Deaths\",\"Pumps\"),col=c('red','blue'),pch=c(15,17))\n```\n\nHere we see the pattern that Snow observed, namely the cluster of cases around the Broad street pump. Adding the spatial element provides two additional dimensions of data; there is a lot more information communicated in this figure.  But, can we make some crticisms of this figure? Perhaps:\n\n* map scale\n* margins\n* text sizes and overlaps\n* color palate\n\nIndeed, this isn't the nicest looking map, but it gets the job done.  Using ggplot and googlemaps, we can create some more modern looking maps. Here are two examples, what do you think are the strengths and weaknesses of these plots? Which one does a better job of communicating the data or revealing the trend?\n\n```{r map code, echo = FALSE,cache=TRUE,warnings=FALSE,message=FALSE}\nget_london <- get_map(c(-.137,51.513), zoom=16,maptype=\"toner-lite\")\nlondon = ggmap(get_london)\nget_london2 <- get_map(c(-.137,51.513), zoom=16,maptype=\"roadmap\")\nlondon2 = ggmap(get_london2)\n\ndeaths <- readShapePoints(\"Cholera_Deaths.shp\")\npumps <- readShapePoints(\"Pumps.shp\")\ndf_deaths <- data.frame(deaths@coords)\ncoordinates(df_deaths)=~coords.x1+coords.x2\nproj4string(df_deaths)=CRS(\"+init=epsg:27700\") \ndf_deaths = spTransform(df_deaths,CRS(\"+proj=longlat +datum=WGS84\"))\ndf=data.frame(df_deaths@coords)\ndf_pumps <- data.frame(pumps@coords)\ncoordinates(df_pumps)=~coords.x1+coords.x2\nproj4string(df_pumps)=CRS(\"+init=epsg:27700\") \ndf_pumps = spTransform(df_pumps,CRS(\"+proj=longlat +datum=WGS84\"))\ndf=data.frame(df_pumps@coords)\n\nclassic = london + geom_point(aes(x=coords.x1, y=coords.x2),data=data.frame(df_deaths@coords),col=\"red\") +\n  geom_point(aes(x=coords.x1, y=coords.x2),data=data.frame(df_pumps@coords),col=\"blue\",size=5) + \n  geom_density2d(data = data.frame(df_deaths@coords), \n                 aes(x = coords.x1, y=coords.x2), size = 0.3) + labs(xlab = \"Lattitude\",ylab=\"Longitude\")\n\nmodern = london2 +\n  geom_point(aes(x=coords.x1, y=coords.x2),data=data.frame(df_pumps@coords),col=\"blue\",size=5) +\n  geom_density2d(data = data.frame(df_deaths@coords), \n                 aes(x = coords.x1, y=coords.x2), size = 0.3) + \n  stat_density2d(data = data.frame(df_deaths@coords), \n                 aes(x = coords.x1, y=coords.x2,fill = ..level.., alpha = ..level..),size = 0.01, bins = 16, geom = \"polygon\") + scale_fill_gradient(low = \"green\", high = \"red\",guide = FALSE) + \n  scale_alpha(range = c(0, 0.3), guide = FALSE) + labs(xlab = \"Lattitude\",ylab=\"Longitude\")\n```\n\n```{r smap, echo=FALSE, fig.height=4, fig.cap=\"This plot uses the stamen maps, called toner-lite in the ggmap package.\"}\nclassic\n```\n```{r gmap,echo=FALSE,fig.height=4,fig.cap=\"This plot uses the google maps background from ggmaps.\"}\nmodern\n```\n\n\n### This Document\n\n`r newthought('The Tufte handout style')`^[[Beautiful Evidence](http://www.edwardtufte.com/tufte/books_be)],  is a style that Edward Tufte uses in his books and handouts. Tufte's style is known for its extensive use of sidenotes, tight integration of graphics with text, and well-set typography. This style has been implemented in LaTeX and HTML/CSS^[See Github repositories [tufte-latex](https://github.com/tufte-latex/tufte-latex) and [tufte-css](https://github.com/edwardtufte/tufte-css)], respectively.\n\nTo see the R Markdown source of this example document, you may follow [this link to Github](https://github.com/rstudio/tufte/raw/master/inst/rmarkdown/templates/tufte_html/skeleton/skeleton.Rmd), use the wizard in RStudio IDE (`File -> New File -> R Markdown -> From Template`), or open the Rmd file in the package:\n\n```{r bib, include=FALSE}\n# create a bib file for the R packages used in this document\nknitr::write_bib(c('base', 'rmarkdown'), file = 'skeleton.bib')\n```\n",
    "created" : 1486393634434.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2674705944",
    "id" : "69EC98F0",
    "lastKnownWriteTime" : 1486407589,
    "path" : "~/Downloads/HLecture2.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}